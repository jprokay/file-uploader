/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth": {
    /**
     * Authenticate
     * @description Issues a cookie with a user ID necessary to complete other requests
     */
    get: operations["getAuthenticate"];
  };
  "/contacts": {
    /**
     * Get all Contacts
     * @description Get all Contacts
     */
    get: operations["getAllContacts"];
  };
  "/directories/{id}/entries": {
    /**
     * Get Directory Entries for a Directory
     * @description Get Directory Entries for a Directory
     */
    get: operations["getEntriesForDirectory"];
  };
  "/directories": {
    /**
     * Get all uploaded Directories
     * @description Get all Directories for the input user
     */
    get: operations["getAllDirectories"];
    /**
     * Upload a new Directory
     * @description Upload a new CSV file for processing into contacts
     */
    post: operations["createNewDirectory"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Contact: {
      contact_id: string;
      contact_first_name: string;
      contact_last_name: string;
      contact_email: string;
      user_id: string;
    };
    Directory: {
      directory_id: number;
      directory_created_at: string;
      directory_name: string;
      /** @enum {string} */
      directory_status: "processing" | "error" | "completed";
      directory_entries: number;
      /** Format: uuid */
      user_id: string;
    };
    ArrayOfDirectoryErrors: {
        fileName?: string;
        error?: string;
      }[];
    DirectoryEntry: {
      entry_id: number;
      entry_first_name: string;
      entry_last_name: string;
      entry_email: string;
      directory_id: number;
      user_id: string;
      order_id: number;
      entry_email_valid: boolean;
    };
    Error: {
      error?: string;
    };
    DirectoriesWithTotal: {
      items: components["schemas"]["Directory"][];
      total: number;
    };
    ContactsWithTotal: {
      items: components["schemas"]["Contact"][];
      total: number;
    };
    EntriesWithTotal: {
      items: components["schemas"]["DirectoryEntry"][];
      total: number;
    };
  };
  responses: {
    /** @description An error occurred on the server */
    ServerError: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description A single directory */
    Directory: {
      content: {
        "application/json": components["schemas"]["Directory"];
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Authenticate
   * @description Issues a cookie with a user ID necessary to complete other requests
   */
  getAuthenticate: {
    responses: {
      /** @description no op with a cookie */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /**
   * Get all Contacts
   * @description Get all Contacts
   */
  getAllContacts: {
    parameters: {
      query: {
        limit: number;
        offset: number;
        search?: string;
      };
      cookie: {
        userId: string;
      };
    };
    responses: {
      /** @description A list of Contacts */
      200: {
        content: {
          "application/json": components["schemas"]["ContactsWithTotal"];
        };
      };
    };
  };
  /**
   * Get Directory Entries for a Directory
   * @description Get Directory Entries for a Directory
   */
  getEntriesForDirectory: {
    parameters: {
      query: {
        limit: number;
        offset: number;
        search?: string;
      };
      path: {
        id: number;
      };
      cookie: {
        userId: string;
      };
    };
    responses: {
      /** @description A list of Directory Entries */
      200: {
        content: {
          "application/json": components["schemas"]["EntriesWithTotal"];
        };
      };
    };
  };
  /**
   * Get all uploaded Directories
   * @description Get all Directories for the input user
   */
  getAllDirectories: {
    parameters: {
      query: {
        sort?: "asc" | "desc";
        limit: number;
        offset: number;
      };
      cookie: {
        userId: string;
      };
    };
    responses: {
      /** @description A list of Directories */
      200: {
        content: {
          "application/json": components["schemas"]["DirectoriesWithTotal"];
        };
      };
      500: components["responses"]["ServerError"];
    };
  };
  /**
   * Upload a new Directory
   * @description Upload a new CSV file for processing into contacts
   */
  createNewDirectory: {
    parameters: {
      cookie: {
        userId: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          columnLayout: ("first_name" | "last_name" | "email")[];
          filename?: string[];
          excludeFirstRow: boolean;
        };
      };
    };
    responses: {
      200: components["responses"]["Directory"];
      /** @description Some files may have failed to upload */
      500: {
        content: {
          "application/json": {
            completed?: components["schemas"]["DirectoriesWithTotal"];
            errors?: components["schemas"]["ArrayOfDirectoryErrors"];
          };
        };
      };
    };
  };
}
