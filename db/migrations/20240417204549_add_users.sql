-- migrate:up
BEGIN;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Different phases of processing a directory
create type directory_statuses as enum ('processing', 'completed', 'error');

-- Users upload directories and contacts
create table users (
	user_id uuid default uuid_generate_v4() primary key 
);

-- Directory represents a CSV file of contacts for processing
create table directories (
	directory_id integer primary key generated by default as identity,
	directory_name text not null,
	directory_created_at timestamp default current_timestamp,
	directory_status directory_statuses default 'processing',

	directory_entries integer default(0),

	user_id uuid not null references users(user_id) on delete cascade
);

-- Rows in the CSV table
create table directory_entries (
	entry_id 				integer primary key generated by default as identity,
	order_id				integer not null,
	entry_first_name	text not null,
	entry_last_name	text not null,
	entry_email			text not null,
	entry_email_valid boolean default(true),

	user_id uuid not null references users(user_id) on delete cascade,
	directory_id integer references directories(directory_id) on delete cascade
);

-- Directory Entries become Contacts
-- Validation of the Directory Entry email is up to the backend server
create table contacts (
	contact_id 				integer primary key generated by default as identity,
	contact_email text,
	user_id uuid not null references users(user_id) on delete cascade,

	contact_first_name text not null,
	contact_last_name text not null,
	
	-- ensure no dupes of email addresses
	unique(contact_email, user_id)
);

create or replace function notify_directory_entry_modified()
returns trigger as $$
begin
	if new.entry_email_valid = true then
		PERFORM pg_notify('new_entry', row_to_json(new)::text);
	end if;
	return null;
end;
$$ language plpgsql;

-- Configure trigger
create trigger trigger_notify_entry_modified
after insert on directory_entries
for each row
execute function notify_directory_entry_modified();

COMMIT;
-- migrate:down

BEGIN;
drop table if exists contacts;
drop table if exists directory_entries cascade;
drop table if exists directories cascade;
drop table if exists users cascade;
drop type if exists directory_statuses;

COMMIT;
